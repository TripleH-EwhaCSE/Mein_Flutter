version: '3'

services:
  flask_app:
    container_name: flask_app
    restart: always
    build: ./flask_app
    ports:
      - "8000:8000"
    command: gunicorn -w 1 -b 0.0.0.0:8000 wsgi:server

  nginx:
    container_name: nginx
    restart: always
    build: ./nginx
    ports:
      - "80:80"
      - "81:81"
    depends_on:
      - flask_app
      - django_app

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      #- discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
    #   - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    # networks:
    #   - elastic



  django_app:
    container_name: django_app
    build:
      context: .
      dockerfile: ./django/Dockerfile
    command: gunicorn mein.wsgi:application --bind 0.0.0.0:8010
      # settings.py 환경분리 되어있어 settings를 지정해야하는 경우 다음과 같이 추가 입력
      # [--env DJANGO_SETTINGS_MODULE='<django_project>.settings.production']
    expose:
      - "8010"


#    networks:
#      - app-tier
    restart: always
    volumes:
      - ./django/app:/app
    env_file:
      - ./django/env.dev


# volumes:
#   data01:
#     driver: local


# networks:
#   elastic:
#     driver: bridge
